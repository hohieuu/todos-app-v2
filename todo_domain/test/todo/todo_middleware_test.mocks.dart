// Mocks generated by Mockito 5.1.0 from annotations
// in todo_package/test/todo/todo_middleware_test.dart.
// Do not manually edit this file.

import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_package/src/models/todo.dart' as _i5;
import 'package:todo_package/src/repository/abstract_todos_repository.dart'
    as _i2;
import 'package:todo_package/src/repository/todos_repository.dart' as _i4;
import 'package:todo_package/src/todo_actions.dart' as _i6;
import 'package:todo_package/src/todo_state.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeAbstractTodosRepository_0 extends _i1.Fake
    implements _i2.AbstractTodosRepository {}

class _FakeTodoState_1 extends _i1.Fake implements _i3.TodoState {}

/// A class which mocks [TodosRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTodosRepository extends _i1.Mock implements _i4.TodosRepository {
  MockTodosRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.AbstractTodosRepository get localRepo =>
      (super.noSuchMethod(Invocation.getter(#localRepo),
              returnValue: _FakeAbstractTodosRepository_0())
          as _i2.AbstractTodosRepository);
  @override
  dynamic addTodo(_i5.Todo? todo) =>
      super.noSuchMethod(Invocation.method(#addTodo, [todo]));
  @override
  dynamic updateTodo(_i5.Todo? todo) =>
      super.noSuchMethod(Invocation.method(#updateTodo, [todo]));
  @override
  dynamic getTodos(_i6.GetTodoListTodoAction? loadTodosAction) =>
      super.noSuchMethod(Invocation.method(#getTodos, [loadTodosAction]));
}

/// A class which mocks [AbstractTodoFeature].
///
/// See the documentation for Mockito's code generation for more information.
class MockAbstractTodoFeature extends _i1.Mock
    implements _i3.AbstractTodoFeature {
  MockAbstractTodoFeature() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.TodoState get todoState =>
      (super.noSuchMethod(Invocation.getter(#todoState),
          returnValue: _FakeTodoState_1()) as _i3.TodoState);
}
